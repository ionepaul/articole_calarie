@model ArticoleCalarie.Models.RegisterViewModel

@{
    ViewBag.Title = "Înregistrează-te";
}

<div class="page-wrapper">
    <div class="register-wrapper contact-content">
        @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal form-register", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <h3 class="form-title">Înregistrează-te</h3>
            <section class="form-wrapper register-form-wrapper">
                <ul class="list-tick">
                    <li><span class="icon"><i class="fa fa-check" aria-hidden="true"></i></span> Check-out simplu și rapid</li>
                    <li><span class="icon"><i class="fa fa-check" aria-hidden="true"></i></span> Vizualizează toate comenzile tale</li>
                </ul>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-12">
                        <i class="fa fa-user" aria-hidden="true"></i>
                        @Html.TextBoxFor(m => m.FullName, new { @class = "input-info", @placeholder = Html.DisplayNameFor(m => m.FullName) })
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger login-errorMessage" })
                <br />
                <div class="form-group">
                    <div class="col-md-12">
                        <i class="fa fa-envelope" aria-hidden="true"></i>
                        @Html.TextBoxFor(m => m.Email, new { @class = "input-info", @placeholder = Html.DisplayNameFor(m => m.Email) })
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger login-errorMessage" })
                <br />
                <div class="form-group">
                    <div class="col-md-12">
                        <i class="fa fa-lock" aria-hidden="true"></i>
                        @Html.PasswordFor(m => m.Password, new { @class = "input-info", @placeholder = Html.DisplayNameFor(m => m.Password) })
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger login-errorMessage" })
                <br />
                <div class="form-group">
                    <div class="col-md-12">
                        <i class="fa fa-lock" aria-hidden="true"></i>
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-info", @placeholder = Html.DisplayNameFor(m => m.ConfirmPassword) })
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger login-errorMessage" })
                <br />
                <div class="form-group">
                    <div class="col-md-12">
                        <label class="checkbox-container">
                            <input data-val="true" id="termsAndCond" name="termsAndCond" type="checkbox" value="true"><input name="termsAndCond" type="hidden" value="false">
                            <label class="checkbox-label" for="termsAndCond">Accept <a href="#0" class="termsAndCondLink">termenii si conditiile</a></label>
                            <span class="checkbox-checkmark"></span>
                        </label>
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" style="border: none; width: 100%" class="submit send" value="Confirmă" />
                    </div>
                </div>
            </section>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
