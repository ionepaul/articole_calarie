@using ArticoleCalarie.Models
@model IEnumerable<SubcategoryViewModel>

@{
    var itemsPerSection = Model.Count() / 3;
}

<div class="widget widget-custom-menu">
    <ul>
        @foreach (var subcategory in Model.Take(itemsPerSection))
        {
            <li class="@(ViewContext?.RouteData?.Values["subcategoryName"]?.ToString() == subcategory.Name.ToLower().Replace(" ", "-") ? "active" : "")">
                <a href="@Url.RouteUrl("product-list-url", new { categoryName = subcategory.CategoryName.ToLower(), subcategoryId = subcategory.Id, subcategoryName = subcategory.Name.ToLower().Replace(" ", "-"), page = 1 })">@subcategory.Name</a>
            </li>
        }
    </ul>
</div>

<div class="widget widget-custom-menu">
    <ul>
        @foreach (var subcategory in Model.Skip(itemsPerSection).Take(itemsPerSection))
        {
            <li class="@(ViewContext?.RouteData?.Values["subcategoryName"]?.ToString() == subcategory.Name.ToLower().Replace(" ", "-") ? "active" : "")">
                <a href="@Url.RouteUrl("product-list-url", new { categoryName = subcategory.CategoryName.ToLower(), subcategoryId = subcategory.Id, subcategoryName = subcategory.Name.ToLower().Replace(" ", "-"), page = 1 })">@subcategory.Name</a>
            </li>
        }
    </ul>
</div>

<div class="widget widget-custom-menu">
    <ul>
        @foreach (var subcategory in Model.Skip(itemsPerSection * 2))
        {
            <li class="@(ViewContext?.RouteData?.Values["subcategoryName"]?.ToString() == subcategory.Name.ToLower().Replace(" ", "-") ? "active" : "")">
                <a href="@Url.RouteUrl("product-list-url", new { categoryName = subcategory.CategoryName.ToLower(), subcategoryId = subcategory.Id, subcategoryName = subcategory.Name.ToLower().Replace(" ", "-"), page = 1 })">@subcategory.Name</a>
            </li>
        }
    </ul>
</div>
